#!/bin/sh

# Save the working directory to return to
olddir="$PWD"
# Move to ncmpcpp config dir
cd ~/.config/ncmpcpp

function main() {
    
    unset COLUMNS LINES
    # Get terminal width and height
    term_w=$(tput cols)
    term_h=$(tput lines)
    
    # Set up window size calculations
    calculate_sizes

    # Launch all the other windows in the program
    initialize_layout

    # Resize windows
    resize

    # Display cover art
    ./art.sh

    # Start Window Resize Handling
    monitor_window_resize

    # Finally launch ncmpcpp
    ncmpcpp -q

    # Clean up once ncmpcpp closes
    cleanup
}

function calculate_sizes() {

    # Cover image size
    export ncmpcppk_cover_width=$((term_w / 4))
    export ncmpcppk_cover_height=$((term_w / 8))

    # Calculate amount to resize the cover panel horizontally
    # and vertically, in order to get a mostly square frame for the cover.
    cover_resize_amount_h=$(bc -l <<< "-1 * ($ncmpcppk_cover_width - ($term_w / 32))" | xargs printf "%.0f")
    cover_resize_amount_v=$(bc -l <<< "-1 * (($term_h / 2) - $ncmpcppk_cover_height - 1)" | xargs printf "%.0f")
    # Turn -0 into 0
    if [ "$cover_resize_amount_h" == "-0" ]; then
        cover_resize_amount_h=0
    fi
    if [ "$cover_resize_amount_v" == "-0" ]; then
        cover_resize_amount_v=0
    fi
}

function initialize_layout() {
    # Use split layout
    kitty @ goto-layout splits
    kitty @ set-window-title "ncmpcppk"
    
    # Show cover art
    nohup kitty @ launch --title "ncmpcppk-cover" --cwd=current --location=before sh -i <<< "exec </dev/tty" &> /dev/null
    # Show lyrics
    nohup kitty @ launch --title "ncmpcppk-lyrics" --location=hsplit sh -c "lyvi" &> /dev/null
    
    # Refocus main ncmpcpp window and show visualization
    kitty @ focus-window -m  "title:^(ncmpcppk)$"
    nohup kitty @ launch --keep-focus --title "ncmpcppk-vis" --location=hsplit cava &> /dev/null
}

function resize() {

    # Make visualizer 1/8th terminal height
    kitty @ resize-window -m "title:ncmpcppk-vis" -i -$(((term_h / 8) * 3)) -a vertical
   
    # Resize cover
    if [ "$cover_resize_amount_h" != "0" ]; then
        kitty @ resize-window -m "title:ncmpcppk-cover" -i "$cover_resize_amount_h" -a horizontal
    fi
    if [ "$cover_resize_amount_v" != "0" ]; then
        kitty @ resize-window -m "title:ncmpcppk-cover" -i "$cover_resize_amount_v" -a vertical
        kitty @ scroll-window -m "title:ncmpcppk-cover" start
    fi
}

function cleanup() {
    
    # Close visualization windows
    kitty @ close-window -m "title:ncmpcppk-cover"
    kitty @ close-window -m "title:ncmpcppk-lyrics"
    kitty @ close-window -m "title:ncmpcppk-vis"
    # Reset terminal size for kitty
    kitty @ resize-window -a reset

    unset ncmpcppk_monitor
    unset ncmpcppk_cover_width
    unset ncmpcppk_cover_height
}

function monitor_window_resize() {
    export ncmpcppk_monitor=1
    {
        trap 'handle_window_resize' WINCH
        while [ "$ncmpcppk_monitor" -eq 1 ]; do sleep .1; done;
    }&
}

function handle_window_resize() {

    # HACK: get number of windows to ensure layout is set up correctly
    winnum="$( echo "$(kitty @ ls)" | grep -oP "\"KITTY_WINDOW_ID\": \"\d+\"" | wc -l )"
    echo "$winnum" > log

    if [ "$winnum" -ne 4 ]; then
        export ncmpcppk_monitor=0
        return 0
    fi
   
    kitty @ resize-window -a reset

    unset COLUMNS LINES
    # Get terminal width and height
    term_w=$(tput cols)
    term_h=$(tput lines)
    term_w=$((term_w * 2))
    term_h=$((term_h * 2))
     
    calculate_sizes

    #resize
    #./art.sh
}

main
cd "$olddir"
